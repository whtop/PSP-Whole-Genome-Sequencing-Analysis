## R script to run SKAT


args=commandArgs(TRUE)
chr = args[[1]] 
bed_dir = args[[2]] 
bed_head = args[[3]] 
bed_tail = args[[4]] 
dat_dir = args[[5]] 
fam_name = args[[6]] 
cov_name = args[[7]] 
set_dir = args[[8]] 
set_head = args[[9]] 
set_tail = args[[10]] 
output_dir = args[[11]] 
output_head = args[[12]] 
wt_dir = args[[13]]
wt_head = args[[14]]
wt_tail = args[[15]]
split = args[[16]]

print(sessionInfo())
.libPaths('/mnt/analysis-psp/users/timchang/programs/R/3.6.3/')
library(SKAT)

File.Bed<-paste(bed_dir, bed_head, chr, bed_tail, ".bed",sep='') 
File.Bim<-paste(bed_dir, bed_head, chr, bed_tail,".bim",sep='') 
File.Fam<-paste(dat_dir, fam_name,sep='') 
File.SetID<-paste(set_dir,set_head,chr,'.',split,set_tail,sep='') #user provided. SetID (gene name) and SNP_ID (SNP)
File.SSD<-paste(set_dir,set_head,chr,'.',split,set_tail,".SSD",sep='') #binary with genotypes. created from SetID and plink data
File.Info<-paste(set_dir, set_head,chr,'.',split,set_tail,".SSD.info",sep='') #info about the set created
print(File.Bim)
print(File.SetID)

File.Cov<-paste(dat_dir,cov_name,sep='') #FID, IID, X1 and X2 where X_i are variables. 
FAM<-Read_Plink_FAM_Cov(File.Fam, File.Cov, Is.binary=TRUE,cov_header=FALSE) #creates FID (actual sample name), IID, PID, MID, Sex, Phenotype, X1...Xmy 

#create weights. 
File.Wt=paste0(wt_dir, wt_head, wt_tail)
obj.SNPWeight=Read_SNP_WeightFile(File.Wt)

SSD.INFO<-Open_SSD(File.SSD, File.Info) 
covvec=names(FAM)[which(names(FAM)=='COV1'):length(names(FAM))]
nullformula=as.formula(paste('Phenotype ~ ',paste(covvec[-length(covvec)], '+',collapse=" "),covvec[length(covvec)]))
print(nullformula)
obj<-SKAT_Null_Model(nullformula, out_type="D",data=FAM, Adjustment=FALSE)
out<-SKATBinary.SSD.All(SSD.INFO, obj,obj.SNPWeight=obj.SNPWeight,method='SKATO') 

print(out) 
File.Out=paste(output_dir,output_head,chr,'.',split,'.res',sep='')
write.table(out$results[,c('SetID', 'P.value','N.Marker.Test','MAC')],file=File.Out,quote=FALSE,sep='\t', row.names=FALSE, col.names=FALSE)
print(warnings())

Close_SSD()
